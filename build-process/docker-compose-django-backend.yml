services:  
  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    # environment:
    #   - REDIS_PASSWORD=cdhhwfjw8jdjs  # Add this line for Redis password
    # command: ["redis-server", "--requirepass", "cdhhwfjw8jdjs"]  # Require Redis password
    networks:
      - elastic
    restart: always  



  postgres:
    platform: 'linux/amd64'
    image: postgres:latest
    container_name: backend-postgres-production
    environment:
      - POSTGRES_USER=codewithmuh
      - POSTGRES_PASSWORD=382gsjhgds
      - POSTGRES_DB=codewithmuh_database
    ports:
      - '5432:5432'
    volumes:
      - backend-postgres-production:/var/lib/postgresql/data/
    networks:
      - elastic
    restart: always    

  web:
    build: .
    command: gunicorn --bind 0.0.0.0:8000 your_project.wsgi:application
    expose:
      - 8000
    environment:
      - DATABASE_URL=postgres://user:password@db:5432/dbname
      - DJANGO_SETTINGS_MODULE=your_project.settings
    depends_on:
      -  postgres

  backend:
    platform: 'linux/amd64'
    image: backend-django:production
    container_name: backend-django-production
    build:
      context: ../
      dockerfile: ./build-process/docker-backend-django/Dockerfile
      args:
        APP_ENVIRONMENT: 'Production'
    volumes:
      - ../:/home/codewithmuh-backend
    ports:
      - '80:80'
    env_file:
      - ./production.backend.env
    depends_on:
      - postgres
      - redis
    networks:
      - elastic
    restart: always

  celery:
    platform: 'linux/amd64'
    image: backend-django:production
    container_name: backend-django-celery-production
    build: 
      context: ../
      dockerfile: ./build-process/docker-backend-django/Dockerfile
      args:
        APP_ENVIRONMENT: 'Production'
    volumes:
      - ../:/home/codewithmuh-backend
    # command: celery -A YOUR_APP worker -l info
    ports:
      - '5555:5555'
    env_file:
      - ./production.backend.env
    depends_on:
      - backend
      - redis
    environment:
      - C_FORCE_ROOT="true"
    networks:
      - elastic
    restart: always  


volumes:
  backend-postgres-production:
  esdata:

networks:
  elastic:
    driver: bridge
